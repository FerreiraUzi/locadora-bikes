
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Etec
 */


public class TelaLocacao extends javax.swing.JFrame {

    // --- Listas e dados simulados ---
    private final List<String> clientes = new ArrayList<>();
    private final List<String> bicicletasDisponiveis = new ArrayList<>();
    private final List<Locacao> locacoes = new ArrayList<>();

    /**
     * Creates new form TelaLocacao
     */
    public TelaLocacao() {
        initComponents();
        carregarClientes();
        carregarBicicletasDisponiveis();
        ListarLocacoes();
    }

    // --- Classe interna que representa uma locação ---
    private static class Locacao {
        String cliente;
        String bicicleta;
        boolean devolvida;

        Locacao(String cliente, String bicicleta) {
            this.cliente = cliente;
            this.bicicleta = bicicleta;
            this.devolvida = false;
        }
    }
    
    private void carregarClientes() {
        clientes.addAll(Arrays.asList("João", "Maria", "Carlos", "Ana"));
        cbClientes.removeAllItems();
        for (String c : clientes) {
            cbClientes.addItem(c);
        }
    }

    private void carregarBicicletasDisponiveis() {
        bicicletasDisponiveis.addAll(Arrays.asList("Bicicleta A", "Bicicleta B", "Bicicleta C"));
        cbBicicletasDisponiveis.removeAllItems();
        for (String b : bicicletasDisponiveis) {
            cbBicicletasDisponiveis.addItem(b);
        }
    }

    private void ListarLocacoes() {
        DefaultTableModel model = new DefaultTableModel(
                new Object[]{"Cliente", "Bicicleta", "Status"}, 0);
        for (Locacao l : locacoes) {
            model.addRow(new Object[]{
                    l.cliente,
                    l.bicicleta,
                    l.devolvida ? "Devolvida" : "Ativa"
            });
        }
        tabelaLocacoes.setModel(model);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbClientes = new javax.swing.JComboBox<>();
        cbBicicletasDisponiveis = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnAlugar = new javax.swing.JButton();
        btnDevolver = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaLocacoes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cbClientes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbClientes.setName("cbClientes"); // NOI18N
        cbClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbClientesActionPerformed(evt);
            }
        });

        cbBicicletasDisponiveis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbBicicletasDisponiveis.setName("cbBicicletasDisponiveis"); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setLabelFor(cbClientes);
        jLabel1.setText("Cliente:");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setLabelFor(cbBicicletasDisponiveis);
        jLabel2.setText("Bicicletas:");

        btnAlugar.setText("Alugar");
        btnAlugar.setName("btnAlugar"); // NOI18N
        btnAlugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlugarActionPerformed(evt);
            }
        });

        btnDevolver.setText("Devolver");
        btnDevolver.setName("btnDevolver"); // NOI18N
        btnDevolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDevolverActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel3.setText("Tela de Locações:");

        tabelaLocacoes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaLocacoes.setName("tabelaLocacoes"); // NOI18N
        jScrollPane1.setViewportView(tabelaLocacoes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAlugar)
                                .addGap(18, 18, 18)
                                .addComponent(btnDevolver))
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(cbBicicletasDisponiveis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel3)
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(5, 5, 5)
                .addComponent(cbBicicletasDisponiveis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAlugar)
                    .addComponent(btnDevolver))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbClientesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbClientesActionPerformed

    private void btnAlugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlugarActionPerformed
     
        String cliente = (String) cbClientes.getSelectedItem();
        String bicicleta = (String) cbBicicletasDisponiveis.getSelectedItem();

        if (cliente == null || bicicleta == null) {
            JOptionPane.showMessageDialog(this, "Selecione cliente e bicicleta!");
            return;
        }

        Locacao loc = new Locacao(cliente, bicicleta);
        locacoes.add(loc);
        bicicletasDisponiveis.remove(bicicleta);
        cbBicicletasDisponiveis.removeItem(bicicleta);
        atualizarTabela();

        JOptionPane.showMessageDialog(this, "Bicicleta alugada com sucesso!");
    

    }//GEN-LAST:event_btnAlugarActionPerformed

    private void btnDevolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDevolverActionPerformed
        int linha = tabelaLocacoes.getSelectedRow();
        if (linha == -1) {
            JOptionPane.showMessageDialog(this, "Selecione uma locação na tabela!");
            return;
        }

        Locacao loc = locacoes.get(linha);
        if (loc.devolvida) {
            JOptionPane.showMessageDialog(this, "Essa locação já foi devolvida!");
            return;
             }

        loc.devolvida = true;
        bicicletasDisponiveis.add(loc.bicicleta);
        cbBicicletasDisponiveis.addItem(loc.bicicleta);

        atualizarTabela();
        JOptionPane.showMessageDialog(this, "Bicicleta devolvida com sucesso!");
    
    }//GEN-LAST:event_btnDevolverActionPerformed

   
    
    /**
     * @param args the command line arguments
     */
  public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> new TelaLocacao().setVisible(true));
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlugar;
    private javax.swing.JButton btnDevolver;
    private javax.swing.JComboBox<String> cbBicicletasDisponiveis;
    private javax.swing.JComboBox<String> cbClientes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaLocacoes;
    // End of variables declaration//GEN-END:variables
}
